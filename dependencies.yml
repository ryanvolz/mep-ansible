---
- hosts: localhost
  tasks:

  - name: Install Dependencies (Apt)
    apt:
      pkg:
          - libhdf5-dev
          - docker.io
          - mosquitto-clients 
          - host
          - dnsutils
          - screen
          - telnet
          - chrony
          - telegraf
          - influxdb
          - influxdb-client
          - vim
          - nano
          - less
          - file
          - telnet
          - iptables
          - python3-pip
          - xrdp
          - cmake
          - xorg-dev
          - libboost-all-dev
          - minicom
          - net-tools
          - iftop
          - backport-iwlwifi-dkms
          - firefox
          - cuda-nvtx-12-2 
          - libcufft-dev-12-2 
          - libcusolver-dev-12-2 
          - libcurand-dev-12-2
          - holoscan
          - libpcap0.8-dev 
          - meson 
          - python3-pyelftools
      state: present
      update_cache: yes


  - name: Remove gnome-initial-setup
    apt:
      pkg:
        - gnome-initial-setup
      state: absent

  # - name: Install Utilities (Pip)
  #   pip:
  #     name:
  #       - jetson-stats
  #   async: 120
  #   poll: 5
  #   register: jetson_stats_watcher

  # - name: Check jetson-stats install
  #   async_status:
  #     jid: "{{ jetson_stats_watcher.ansible_job_id }}"
  #   register: jetson_stats_result
  #   until: jeton_status_result.finished
  #   retries: 60  # Adjust based on your needs
  #   delay: 10
  #   failed_when: jetson_status_result.rc is not defined and retries == 60

  # - name: Handle jetson-stats timeout
  #   command: /usr/sbin/service jtop stop
  #   when: jeton_status_result.rc is not defined


  # - name: Install uv
  #   shell: "files/uv-install.sh"


  - name: Check if Mellanox tools are installed
    ansible.builtin.command:
      cmd: dpkg-query -W -f='${Status}' mlnx-ofed-kernel-dkms
    register: mft_check
    ignore_errors: yes

  - name: Extract the Mellanox firmware tools archive
    ansible.builtin.command:
      cmd: wget https://github.com/spectrumx/ansible/releases/download/deps-20241112/MLNX_OFED_LINUX-24.07-0.6.1.0-ubuntu22.04-aarch64.tgz -O /tmp/MLNX_OFED_LINUX-24.07-0.6.1.0-ubuntu22.04-aarch64.tgz
      warn: false
    when: mft_check.rc != 0

  - name: Extract the Mellanox firmware tools archive
    ansible.builtin.command:
      cmd: tar -xzf /tmp/MLNX_OFED_LINUX-24.07-0.6.1.0-ubuntu22.04-aarch64.tgz -C /tmp/
      warn: false
    when: mft_check.rc != 0

  - name: Install the .deb package
    command:
      cmd: /tmp/MLNX_OFED_LINUX-24.07-0.6.1.0-ubuntu22.04-aarch64/mlnxofedinstall --basic --with-mstflint --with-python3-pyverbs --force --without-fw-update
    when: mft_check.rc != 0


  - name: Check if Intel Wifi repo is cloned
    stat:
      path: /opt/linux-firmware
    register: checkout_intel_wifi

  - name: Clone the Intel 8265 WIFI drivers repository
    git:
      repo: 'https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git'
      dest: /opt/linux-firmware
      update: no
    when: checkout_intel_wifi

  - name: Copy iwl-8265-34 file to /lib/firmware
    copy:
      src: /opt/linux-firmware/iwlwifi-8265-34.ucode
      dest: /lib/firmware/
      mode: '0644'

  - name: Copy iwl-8265-36 file to /lib/firmware
    copy:
      src: /opt/linux-firmware/iwlwifi-8265-36.ucode
      dest: /lib/firmware/
      mode: '0644'

  - name: Clone holohub repository
    git:
      repo: 'https://github.com/ryanvolz/holohub.git'
      dest: /opt/holohub
      update: no
      version: "mep"
      accept_hostkey: yes
    register: run_holohub_setup

  - name: Install holohub
    command:
      cmd: ./run setup
      chdir: /opt/holohub
    when: run_holohub_setup


  - name: Check if dpdk is installed
    ansible.builtin.command:
      cmd: dpkg-query -W -f='${Version}' dpdk-for-jetson
    register: dpdk_check
    ignore_errors: yes

  - name: Download dpdk
    ansible.builtin.command:
      cmd: wget https://github.com/spectrumx/ansible/releases/download/deps-20241112/dpdk-for-jetson_22.11.6-1ubuntu2_arm64.deb -O /tmp/dpdk-for-jetson_22.11.6-1ubuntu2_arm64.deb
      warn: false
    when: dpdk_check.stdout != "22.11.6-1ubuntu2"

  - name: Install dpdk
    apt:
      deb: /tmp/dpdk-for-jetson_22.11.6-1ubuntu2_arm64.deb
      state: present
    when: dpdk_check.stdout != "22.11.6-1ubuntu2"

  - name: Install holohub
    command:
      cmd: './run build mimo_radar_pipeline --configure-args "-DMATX_EN_PYBIND11=ON -DPYBIND11_FINDPYTHON=ON -DPython_EXECUTABLE=/usr/bin/python3 -DPython_ROOT_DIR=/usr/lib/python3"'
      chdir: /opt/holohub
    when: run_holohub_setup

  - name: Holohub setcap
    command:
      cmd: 'setcap cap_net_raw,cap_dac_override,cap_dac_read_search,cap_ipc_lock,cap_sys_admin+ep ./build/applications/mimo_radar_pipeline/cpp/mimo_radar_pipeline'
      chdir: /opt/holohub
    when: run_holohub_setup


