---
- hosts: localhost
  tasks:

  - name: Get Jetson Model from /proc/device-tree/model
    ansible.builtin.command: cat /proc/device-tree/model
    register: jetson_model

  - name: Check Orin Nano
    ansible.builtin.set_fact:
      jetson_board: "orin_nano"
    when: "'Orin Nano Developer' in jetson_model.stdout"

  - name: Check Orin Nano NX
    ansible.builtin.set_fact:
      jetson_board: "orin_nx"
    when: "'Orin NX' in jetson_model.stdout"

  - name: copy authorized_keys to root
    copy:
      src: "files/root_authorized_keys"
      dest: /root/.ssh/authorized_keys
      mode: 0600
      owner: root
      group: root

  - name: Set MAC address for each interface
    shell: ifconfig {{ item }} hw ether $(ethtool -P {{ item }} | awk '{print $3}')
    ignore_errors: yes
    loop:
      - "eth0"
      - "eth1"
      - "eth2"

  - name: Get new hostname
    shell: cat /sys/class/net/eth1/address | sed -e 's/://g' | cut -c 9-12
    register: new_hostname
    changed_when: False

  - name: Update hostname (systemd)
    hostname:
      name: "{{ new_hostname.stdout }}"

  - copy: content="{{ new_hostname.stdout }}" dest=/etc/hostname




  - name: Add MASQUERADE rule to POSTROUTING chain
    iptables:
      table: nat
      chain: POSTROUTING
      out_interface: eth0
      jump: MASQUERADE
    notify: Save iptables

  - name: Add FORWARD rule for RELATED,ESTABLISHED state
    iptables:
      chain: FORWARD
      in_interface: eth0
      out_interface: eth1
      match: state
      ctstate: RELATED,ESTABLISHED
      jump: ACCEPT
    notify: Save iptables

  - name: Add FORWARD rule to allow traffic from eth1 to eth0
    iptables:
      chain: FORWARD
      in_interface: eth1
      out_interface: eth0
      jump: ACCEPT
    notify: Save iptables

  - name: Ensure sysctl.conf has the correct values
    lineinfile:
      path: /etc/sysctl.conf
      state: present
      regexp: '^{{ item.key }}'
      line: '{{ item.key }}={{ item.value }}'
    loop:
      - { key: 'net.core.rmem_default', value: '26214400' }
      - { key: 'net.core.rmem_max', value: '104857600' }
      - { key: 'net.core.wmem_default', value: '65536' }
      - { key: 'net.core.wmem_max', value: '104857600' }

  - name: Apply sysctl settings
    command: sysctl -p

  - name: Set ethtool ring buffer sizes
    command: ethtool -G eth2 rx 8192 tx 8192
    ignore_errors: yes

  - name: Set MTU to 9000 on eth0
    command:
      cmd: ip link set dev eth0 mtu 9000
    ignore_errors: yes
    notify:
      - Restart networking

  - name: Check if eth0 has the IP address 192.168.4.1
    command:
      cmd: ip addr show dev eth0
    ignore_errors: yes
    register: eth0_output

  - name: Add a new connection for eth0
    command: nmcli con add type ethernet ifname eth0 con-name eth0-connection
    when: "'192.168.4.1' not in eth0_output.stdout"

  - name: Set IP address for eth0
    command: nmcli con mod eth0-connection ipv4.addresses "192.168.4.1/24"
    ignore_errors: yes
    when: "'192.168.4.1' not in eth0_output.stdout"
    notify:
      - Restart networking

  - name: Set IP method to manual
    command: nmcli con mod eth0-connection ipv4.method manual
    ignore_errors: yes
    when: "'192.168.4.1' not in eth0_output.stdout"
    notify:
      - Restart networking

  - name: Bring up the connection
    command: nmcli con up eth0-connection
    ignore_errors: yes
    when: "'192.168.4.1' not in eth0_output.stdout"
    notify:
      - Restart networking

  - name: Check if eth1 has the IP address 192.168.20.1
    command:
      cmd: ip addr show dev eth1
    ignore_errors: yes
    register: eth1_output

  - name: Add a new connection for eth0
    command: nmcli con add type ethernet ifname eth0 con-name eth0-connection

  - name: Set IP address for eth1
    command: nmcli con mod eth1-connection ipv4.addresses "192.168.20.1/24"
    ignore_errors: yes
    when: "'192.168.20.1' not in eth1_output.stdout"
    notify:
      - Restart networking

  - name: Set IP method to manual
    command: nmcli con mod eth1-connection ipv4.method manual
    ignore_errors: yes
    when: "'192.168.20.1' not in eth1_output.stdout"
    notify:
      - Restart networking

  - name: Bring up the connection
    command: nmcli con up eth1-connection
    ignore_errors: yes
    when: "'192.168.20.1' not in eth1_output.stdout"
    notify:
      - Restart networking

  - name: Set kernel boot args
    copy:
      src: files/extlinux.conf
      dest: /boot/extlinux/extlinux.conf
      owner: root
      group: root

  - name: Set power mode
    copy:
      dest: /var/lib/nvpmodel/status
      content: "pmode:0003\n"
    #register: need_reboot
    #changed_when: need_reboot.changed

  - name: Install Hotspot
    apt:
      pkg:
          - hostapd
      state: present
      update_cache: yes
  
  - name: Unmask Hotspot service
    shell: systemctl unmask hostapd
    notify:
      - Restart hostapd

  - name: Setup wifi hotspot
    template: src=templates/hostapd.conf.j2 dest=/etc/hostapd/hostapd.conf owner=root group=root
    notify:
      - Restart hostapd



  handlers:
    - name: Save iptables
      command: /sbin/service iptables save
      when: ansible_os_family == "RedHat"

    - name: Save iptables
      command: /sbin/iptables-save
      when: ansible_os_family == "Debian"

    - name: Restart networking
      ansible.builtin.service:
        name: NetworkManager
        state: restarted

    - name: Restart hostapd
      ansible.builtin.service:
        name: hostapd
        state: restarted