---
- hosts: localhost  
  tasks:

    - name: Install Icarus Dependencies (Apt)
      apt:
        pkg:
            - docker.io
            - docker-compose
        state: present

    - name: clone docker repository
      git:
        repo: git@github.com:spectrumx/docker.git
        dest: /opt/radiohound/docker
        update: yes
        key_file: /opt/radiohound/.ssh/id_rsa
        accept_hostkey: yes

    - name: Add ssh key to docker repo
      shell: GIT_DIR=/opt/radiohound/docker/.git GIT_WORK_TREE=/opt/radiohound/docker git config core.sshCommand "ssh -i /opt/radiohound/.ssh/id_rsa"

    - name: Add git safe.directory to docker repo
      shell: GIT_DIR=/opt/radiohound/docker/.git GIT_WORK_TREE=/opt/radiohound/docker git config --add safe.directory /opt/radiohound/docker

    - name: Copy .env for docker
      copy:
        src: /opt/radiohound/.ssh/.env.docker
        dest: /opt/radiohound/docker/.env
        owner: root
        group: root
        force: no
      ignore_errors: yes

    - name: Get UID and GID of 'mep' user
      ansible.builtin.command: id -u mep
      register: mep_uid

    - name: Get GID of 'mep' user
      ansible.builtin.command: id -g mep
      register: mep_gid

    - name: Replace UID and GID in .env.docker
      ansible.builtin.replace:
        path: /opt/radiohound/.ssh/.env.docker
        regexp: 'UID=MEP_UID'
        replace: "UID={{ mep_uid.stdout }}"

    - name: Replace GID in .env.docker
      ansible.builtin.replace:
        path: /opt/radiohound/.ssh/.env.docker
        regexp: 'GID=MEP_GID'
        replace: "GID={{ mep_gid.stdout }}"

    - name: Check if any containers are running
      command: docker ps --format="{% raw %}{{.Names}}{% endraw %}"
      register: running_containers
      changed_when: false

    - name: Start Docker containers
      shell: docker-compose up -d
      args:
        chdir: /opt/radiohound/docker
      when: running_containers.stdout == ""

    - name: copy docker-control service
      copy:
        src: "files/docker-control.service"
        dest: "/etc/systemd/system/"
        owner: root
        group: root
      notify:
        - systemctl reload
        - start docker-control daemon

  handlers:
    - name: systemctl reload
      shell: /bin/systemctl daemon-reload
        
    - name: start docker-control daemon
      systemd:
        name: docker-control
        state: started
        enabled: yes